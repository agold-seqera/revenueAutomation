<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <name>Ops_Approval_Decision</name>
        <label>Ops Approval Decision</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Rejected_Stage</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Rejected</defaultConnectorLabel>
        <rules>
            <name>Approved_Ops</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Sales_Approval_Step.Outputs.approvalDecision</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Approve</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Approved_Stage</targetReference>
            </connector>
            <label>Approved</label>
        </rules>
    </decisions>
    <decisions>
        <name>Require_Ops_Approval</name>
        <label>Require Ops Approval</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Approved_Stage</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Bypass Ops Approval</defaultConnectorLabel>
        <rules>
            <name>Ops_Approval_Required</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Ops_Approval_Override__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Ops_Approval_Stage</targetReference>
            </connector>
            <label>Ops Approval Required</label>
        </rules>
    </decisions>
    <decisions>
        <name>Require_Sales_Approval</name>
        <label>Require Sales Approval?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Require_Ops_Approval</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Bypass Sales Approval</defaultConnectorLabel>
        <rules>
            <name>Sales_Approval_Required</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Sales_Approval_Override__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Sales_Approval_Stage</targetReference>
            </connector>
            <label>Sales Approval Required</label>
        </rules>
    </decisions>
    <decisions>
        <name>Sales_Approval_Decision</name>
        <label>Sales Approval Decision</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Rejected_Stage</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Rejected</defaultConnectorLabel>
        <rules>
            <name>Approved_Sales</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Sales_Approval_Step.Outputs.approvalDecision</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Approve</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Require_Ops_Approval</targetReference>
            </connector>
            <label>Approved</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Opportunity After Save | Nextflow Conversion Approval {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity After Save | Approval | Nextflow Conversion</label>
    <orchestratedStages>
        <name>Approved_Stage</name>
        <label>Approved Stage</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Set_Status_to_Approved</name>
            <actionName>Opportunity_Subflow_Set_Nextflow_Status_to_Approved</actionName>
            <actionType>stepBackground</actionType>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Set Status to Approved</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Move_to_Pending_Stage</name>
        <label>Move to Pending Stage</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Require_Sales_Approval</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Set_Status_to_Pending</name>
            <actionName>Opportunity_Subflow_Set_Nextflow_Status_to_Pending</actionName>
            <actionType>stepBackground</actionType>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Set Status to Pending</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Ops_Approval_Stage</name>
        <label>Ops Approval Stage</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Ops_Approval_Decision</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Ops_Approval_Step</name>
            <actionName>standard_approvals__EvaluateApproval</actionName>
            <actionType>stepApproval</actionType>
            <assignees>
                <assignee>
                    <stringValue>Ops_Approver</stringValue>
                </assignee>
                <assigneeType>Group</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Ops Approval Step</label>
            <outputConfigParams>
                <name>approvalComments</name>
                <value xsi:nil="true"/>
            </outputConfigParams>
            <outputConfigParams>
                <name>approvalDecision</name>
                <value xsi:nil="true"/>
            </outputConfigParams>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>ApprovalStep</stepSubtype>
        </stageSteps>
        <stageSteps>
            <name>Send_Slack_Approval_Ops</name>
            <actionName>Opportunity_Nextflow_Approval_Slack_Notification</actionName>
            <actionType>stepBackground</actionType>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>groupId</name>
                <value>
                    <elementReference>varT_OpsApproverGroup</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>runningUser</name>
                <value>
                    <elementReference>$Record.OwnerId</elementReference>
                </value>
            </inputParameters>
            <label>Send Slack Approval</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Rejected_Stage</name>
        <label>Rejected Stage</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Set_Status_to_Rejected</name>
            <actionName>Opportunity_Subflow_Set_Nextflow_Status_to_Rejected</actionName>
            <actionType>stepBackground</actionType>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Set Status to Rejected</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Sales_Approval_Stage</name>
        <label>Sales Approval Stage</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Sales_Approval_Decision</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Sales_Approval_Step</name>
            <actionName>standard_approvals__EvaluateApproval</actionName>
            <actionType>stepApproval</actionType>
            <assignees>
                <assignee>
                    <stringValue>Sales_Approver</stringValue>
                </assignee>
                <assigneeType>Group</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Sales Approval Step</label>
            <outputConfigParams>
                <name>approvalComments</name>
                <value xsi:nil="true"/>
            </outputConfigParams>
            <outputConfigParams>
                <name>approvalDecision</name>
                <value xsi:nil="true"/>
            </outputConfigParams>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>ApprovalStep</stepSubtype>
        </stageSteps>
        <stageSteps>
            <name>Send_Slack_Approval_Sales</name>
            <actionName>Opportunity_Nextflow_Approval_Slack_Notification</actionName>
            <actionType>stepBackground</actionType>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>groupId</name>
                <value>
                    <elementReference>varT_SalesApproverGroup</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>runningUser</name>
                <value>
                    <elementReference>$Record.OwnerId</elementReference>
                </value>
            </inputParameters>
            <label>Send Slack Approval</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>ApprovalWorkflow</processType>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Move_to_Pending_Stage</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Currently_Using_Nextflow__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>No</stringValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Negotiations/Contracting</stringValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>varT_OpsApproverGroup</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Ops_Legal_Approver</stringValue>
        </value>
    </variables>
    <variables>
        <name>varT_SalesApproverGroup</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Sales_Approver</stringValue>
        </value>
    </variables>
</Flow>
